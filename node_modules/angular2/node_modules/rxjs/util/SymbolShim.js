var root_1 = require('./root');
var SymbolDefinition = (function () {
    function SymbolDefinition(root) {
        this.root = root;
        this.observable = null;
        this.iterator = null;
        if (!root.Symbol) {
            root.Symbol = {};
        }
        this.observable = this.applyObservable();
        this.iterator = this.applyIterator();
    }
    SymbolDefinition.prototype.applyObservable = function () {
        var root = this.root;
        if (!root.Symbol.observable) {
            if (typeof root.Symbol.for === 'function') {
                root.Symbol.observable = root.Symbol.for('observable');
            }
            else {
                root.Symbol.observable = '@@observable';
            }
        }
        return root.Symbol.observable;
    };
    SymbolDefinition.prototype.applyIterator = function () {
        var root = this.root;
        if (!root.Symbol.iterator) {
            if (typeof root.Symbol.for === 'function') {
                root.Symbol.iterator = root.Symbol.for('iterator');
            }
            else if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {
                // Bug for mozilla version
                root.Symbol.iterator = '@@iterator';
            }
            else if (root.Map) {
                // es6-shim specific logic
                var keys = Object.getOwnPropertyNames(root.Map.prototype);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (key !== 'entries' && key !== 'size' && root.Map.prototype[key] === root.Map.prototype['entries']) {
                        root.Symbol.iterator = key;
                        break;
                    }
                }
            }
            else {
                root.Symbol.iterator = '@@iterator';
            }
        }
        return root.Symbol.iterator;
    };
    return SymbolDefinition;
})();
exports.SymbolDefinition = SymbolDefinition;
exports.SymbolShim = new SymbolDefinition(root_1.root);
//# sourceMappingURL=SymbolShim.js.map